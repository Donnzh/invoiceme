{"version":3,"sources":["helper.js","components/HeaderBar.jsx","components/Notification.jsx","components/Pagination.jsx","components/TableLoader.jsx","containers/HomePage/InvoiceTable.jsx","containers/HomePage/Dialog.jsx","containers/HomePage/index.jsx","containers/App/index.js","serviceWorker.js","index.js"],"names":["fetchData","method","arguments","length","undefined","id","options","fetch","apiUrl","Object","objectSpread","headers","Content-Type","then","handleErrors","catch","error","console","response","ok","Error","statusText","withStyles","theme","root","width","marginTop","spacing","unit","grow","flexGrow","title","defineProperty","display","breakpoints","up","search","position","marginRight","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginLeft","searchIcon","height","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","&:focus","rightIcon","buttonText","lineHeight","props","classes","onSearch","onButtonClick","react_default","a","createElement","AppBar_default","Toolbar_default","Typography_default","className","variant","noWrap","Search_default","InputBase_default","onChange","e","target","value","placeholder","input","Button_default","onClick","size","button","Add_default","success","green","message","icon","notifyInfo","isNotify","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","useEffect","handleClose","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent_default","aria-describedby","CheckCircle_default","action","IconButton_default","aria-label","Close_default","sortedPageNumber","totalPages","currentPage","_range","leftBound","rightBound","isLeftSpill","isRightSpill","concat","toConsumableArray","maxPageItemBlocks","selectInput","down","pagination","inputLabel","fontSize","activePageItem","primary","main","border","margin","pageItem","light","cursor","Math","ceil","totalRecords","rowPerPage","pages","InputLabel_default","htmlFor","onRowPerPageChanged","map","page","index","onPageChanged","key","react_content_loader_es","speed","primaryColor","secondaryColor","x","y","rx","ry","styles","paper","overflowX","row","&:nth-of-type(odd)","background","default","grey","placeholderRow","tableHeaderData","label","align","isSortable","tableData","onEditClick","onDeleteClick","components_TableLoader","setRowPerPage","_useState3","_useState4","setCurrentPage","_useState5","_useState6","sortCol","setSortCol","_useState7","_useState8","sortOrder","setSortOrder","sortTableDate","col","sort","b","hasOwnProperty","compareResult","Date","getTime","Number","currentTableData","slice","Fragment","Paper_default","Table_default","TableHead_default","TableRow_default","data","i","TableCell_default","TableSortLabel_default","active","direction","order","onSortHandler","TableBody_default","tabIndex","component","scope","name","invoiceDate","comment","amount","Tooltip_default","placement","Icon_default","Delete_default","renderActionButtons","components_Pagination","pageNumber","withMobileDialog","breakpoint","dialogData","closeHandler","fullScreen","submitHandler","formData","dateFns","format","onFormSubmit","preventDefault","onFormUpdate","element","replace","Dialog_default","fullWidth","maxWidth","DialogContent_default","autoComplete","onSubmit","gutterBottom","Grid_default","container","item","xs","sm","TextField_default","autoFocus","required","defaultValue","type","InputLabelProps","shrink","multiline","rows","rowsMax","helperText","inputProps","startadornment","InputAdornment_default","pattern","DialogActions_default","HomePage","invoiceData","setInvoiceData","updatedData","setUpdatedData","isOpenDialog","setIsOpenDialog","currentInvoice","setCurrentInvoice","_useState9","_useState10","setNotifyInfo","getInvoices","json","onSearchUpdate","_debounce","searchInput","updateData","filter","toLowerCase","includes","invoiceActions","invoice","fetchMethod","successMessage","body","JSON","stringify","react","components_Notification","HomePage_Dialog","components_HeaderBar","HomePage_InvoiceTable","app","react_router_dom","react_router","exact","path","render","containers_HomePage","Boolean","window","location","hostname","match","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.261d5c4c.chunk.js","sourcesContent":["import dateFns from \"date-fns\";\n\nexport function fetchData(method = \"GET\", id = \"\", options = {}) {\n  const apiUrl = process.env.REACT_APP_API_URL;\n  return fetch(apiUrl + \"/\" + id, {\n    method,\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then(handleErrors)\n    .catch(error => console.error(\"Error:\", error));\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nexport function dateFormat(data) {\n  return data.map(data => {\n    data.invoiceDate = dateFns.format(new Date(data.invoiceDate), \"YYYY-MM-DD\");\n    return data;\n  });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    marginRight: theme.spacing.unit * 2,\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 7,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\",\n  },\n  inputInput: {\n    paddingLeft: theme.spacing.unit * 7,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 162,\n      \"&:focus\": {\n        width: 210,\n      },\n    },\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n  buttonText: {\n    lineHeight: \"initial\",\n  },\n});\n\nfunction HeaderBar(props) {\n  const { classes, onSearch, onButtonClick } = props;\n  const onSearchInput = e => {\n    onSearch(e.target.value);\n  };\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n          Invoices List\n        </Typography>\n        <div className={classes.grow} />\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            onChange={onSearchInput}\n            placeholder=\"Search comments…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <div>\n          <Button\n            onClick={onButtonClick}\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            <Typography variant=\"subtitle1\" color=\"inherit\" noWrap className={classes.buttonText}>\n              New\n            </Typography>\n            <AddIcon className={classes.rightIcon} />\n          </Button>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeaderBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onSearch: PropTypes.func.isRequired,\n  onButtonClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(HeaderBar);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport green from \"@material-ui/core/colors/green\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[500],\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  icon: {\n    marginRight: 6,\n  },\n});\n\nfunction Notification(props) {\n  const { classes, notifyInfo } = props;\n  const isNotify = notifyInfo ? true : false;\n  const [isOpen, setIsOpen] = useState(isNotify);\n\n  useEffect(() => {\n    setIsOpen(isNotify);\n  }, [notifyInfo]);\n\n  const handleClose = () => setIsOpen(false);\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      open={isOpen}\n      autoHideDuration={1500}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={classes.success}\n        aria-describedby=\"action notification\"\n        message={\n          <span className={classes.message}>\n            <CheckCircleIcon className={classes.icon} />\n            {notifyInfo}\n          </span>\n        }\n        action={\n          <IconButton aria-label=\"Close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        }\n      />\n    </Snackbar>\n  );\n}\n\nNotification.propTypes = {\n  notifyInfo: PropTypes.string,\n};\n\nexport default withStyles(styles)(Notification);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport _range from \"lodash/range\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  selectInput: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\",\n    },\n  },\n  pagination: {\n    display: \"inline\",\n  },\n  inputLabel: {\n    fontSize: \"14px\",\n    marginRight: \"10px\",\n  },\n  activePageItem: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    border: \"none\",\n    fontSize: \"16px\",\n    margin: 4,\n  },\n  pageItem: {\n    display: \"inline\",\n    border: \"none\",\n    fontSize: \"16px\",\n    backgroundColor: \"transparent\",\n    margin: 4,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light,\n      cursor: \"pointer\",\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst sortedPageNumber = (totalPages, currentPage) => {\n  const maxPageItemBlocks = 7;\n  if (totalPages <= maxPageItemBlocks) {\n    return _range(1, totalPages + 1);\n  } else {\n    const leftBound = currentPage > 4 ? currentPage - 1 : 2; // [1, \"<\", leftBound, currentPage, rightBound, \">\", lastPage]\n    const rightBound = currentPage < totalPages - 3 ? currentPage + 1 : totalPages - 1;\n\n    const isLeftSpill = leftBound > 2;\n    const isRightSpill = rightBound < totalPages - 1;\n\n    if (isLeftSpill && isRightSpill) {\n      return [1, \"previous\", ..._range(leftBound, rightBound + 1), \"next\", totalPages]; // e.g: [1, \"<\", 5, 6, 7, \">\", 10]\n    }\n    if (isLeftSpill && !isRightSpill) {\n      return [1, \"previous\", ..._range(rightBound - 3, rightBound + 1), totalPages]; // e.g: [1, \"<\", 6, 7, 8, 9, 10]\n    }\n    if (!isLeftSpill && isRightSpill) {\n      return [1, ..._range(leftBound, maxPageItemBlocks - 1), \"next\", totalPages]; // e.g: [1, 2, 3, 4, 5, \">\", 10]\n    }\n  }\n};\n\nfunction Pagination(props) {\n  const { classes, currentPage } = props;\n  const totalPages = Math.ceil(props.totalRecords / props.rowPerPage);\n  const pages = sortedPageNumber(totalPages, currentPage);\n\n  const handleRowPerPageChange = e => {\n    props.onRowPerPageChanged(e.target.value);\n  };\n  return (\n    <Toolbar aria-label=\"Pagination\" className={classes.root}>\n      <div className={classes.grow} />\n      <div className={classes.selectInput}>\n        <InputLabel className={classes.inputLabel} htmlFor=\"age-simple\">\n          Invoices per page\n        </InputLabel>\n        <select onChange={handleRowPerPageChange}>\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n        </select>\n      </div>\n      <ul className={classes.pagination}>\n        {pages.map((page, index) => {\n          if (page === \"previous\")\n            return (\n              <button\n                onClick={() => props.onPageChanged(currentPage - 3)}\n                key={index}\n                className={currentPage === page ? classes.activePageItem : classes.pageItem}\n              >\n                &laquo;\n                <Typography variant=\"srOnly\">Previous Page</Typography>\n              </button>\n            );\n\n          if (page === \"next\")\n            return (\n              <button\n                key={index}\n                className={currentPage === page ? classes.activePageItem : classes.pageItem}\n                onClick={() => props.onPageChanged(currentPage + 3)}\n              >\n                &raquo;\n                <Typography variant=\"srOnly\">Next Page</Typography>\n              </button>\n            );\n\n          return (\n            <button\n              key={index}\n              onClick={() => props.onPageChanged(page)}\n              className={currentPage === page ? classes.activePageItem : classes.pageItem}\n            >\n              {page}\n            </button>\n          );\n        })}\n      </ul>\n    </Toolbar>\n  );\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  rowPerPage: PropTypes.number,\n  onPageChanged: PropTypes.func,\n  onRowPerPageChanged: PropTypes.func,\n  currentPage: PropTypes.number,\n};\nexport default withStyles(styles)(Pagination);\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    marginTop: theme.spacing.unit * 11,\n  },\n});\n\nconst TableLoader = props => (\n  <div className={props.classes.root}>\n    <ContentLoader\n      height={180}\n      width={400}\n      speed={118}\n      primaryColor=\"#f3f3f3\"\n      secondaryColor=\"#ecebeb\"\n    >\n      <rect x=\"25\" y=\"15\" rx=\"5\" ry=\"5\" width=\"350\" height=\"15\" />\n      <rect x=\"25\" y=\"35\" rx=\"5\" ry=\"5\" width=\"350\" height=\"15\" />\n      <rect x=\"25\" y=\"55\" rx=\"5\" ry=\"5\" width=\"350\" height=\"15\" />\n      <rect x=\"25\" y=\"75\" rx=\"5\" ry=\"5\" width=\"350\" height=\"15\" />\n      <rect x=\"25\" y=\"95\" rx=\"5\" ry=\"5\" width=\"350\" height=\"15\" />\n    </ContentLoader>\n  </div>\n);\n\nexport default withStyles(styles)(TableLoader);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Pagination from \"components/Pagination\";\nimport TableLoader from \"components/TableLoader\";\n\nconst styles = theme => ({\n  paper: {\n    width: \"100%\",\n    overflowX: \"auto\",\n  },\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 10,\n    overflowX: \"auto\",\n    height: \"380px\",\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n    \"&:focus\": {\n      backgroundColor: theme.palette.grey[\"300\"],\n    },\n  },\n  placeholderRow: {\n    height: \"100%\",\n  },\n  button: {\n    width: 40,\n    height: 40,\n    margin: \"5px 5px 0 5px\",\n  },\n});\n\nconst tableHeaderData = [\n  {\n    value: \"id\",\n    label: \"Id\",\n    align: \"inherit\",\n    isSortable: false,\n  },\n  {\n    value: \"name\",\n    label: \"Name\",\n    align: \"left\",\n    isSortable: true,\n  },\n  {\n    value: \"invoiceDate\",\n    label: \"Date\",\n    align: \"left\",\n    isSortable: true,\n  },\n  {\n    value: \"comment\",\n    label: \"Comments\",\n    align: \"right\",\n    isSortable: false,\n  },\n  {\n    value: \"amount\",\n    label: \"Amounts\",\n    align: \"right\",\n    isSortable: true,\n  },\n  {\n    value: \"action\",\n    label: \"Actions\",\n    align: \"right\",\n    isSortable: false,\n  },\n];\n\nfunction InvoiceTable(props) {\n  const { classes, tableData, onEditClick, onDeleteClick } = props;\n  if (!tableData) {\n    return <TableLoader />;\n  }\n\n  const [rowPerPage, setRowPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortCol, setSortCol] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n\n  const onPageChanged = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const onRowPerPageChanged = pageNumber => {\n    setRowPerPage(pageNumber);\n    setCurrentPage(1);\n  };\n\n  const onSortHandler = col => {\n    sortTableDate(col);\n    let order = \"desc\";\n    if (sortCol === col && sortOrder === \"desc\") {\n      order = \"asc\";\n    }\n    setSortCol(col);\n    setSortOrder(order);\n  };\n\n  const renderTableHeader = () => {\n    return tableHeaderData.map((data, i) => {\n      if (!data.isSortable)\n        return (\n          <TableCell key={i} align={data.align}>\n            {data.label}\n          </TableCell>\n        );\n      else {\n        return (\n          <TableCell key={i} align={data.align}>\n            <TableSortLabel\n              active={sortCol === data.value}\n              direction={sortOrder}\n              onClick={() => onSortHandler(data.value)}\n            >\n              {data.label}\n            </TableSortLabel>\n          </TableCell>\n        );\n      }\n    });\n  };\n\n  const renderActionButtons = data => (\n    <React.Fragment>\n      <Tooltip placement=\"top\" title=\"Edit\">\n        <IconButton\n          onClick={() => onEditClick(data)}\n          aria-label=\"Edit Icon\"\n          className={styles.button}\n        >\n          <Icon fontSize=\"small\">edit_icon</Icon>\n        </IconButton>\n      </Tooltip>\n      <Tooltip placement=\"top\" title=\"Delete\">\n        <IconButton\n          onClick={() => onDeleteClick(data)(\"delete\")}\n          aria-label=\"Delete\"\n          className={styles.button}\n        >\n          <DeleteIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </React.Fragment>\n  );\n\n  const sortTableDate = col => {\n    tableData.sort((a, b) => {\n      if (!a.hasOwnProperty(col) || !b.hasOwnProperty(col)) return 0;\n      let compareResult;\n      if (col === \"invoiceDate\") {\n        compareResult = new Date(a[col]).getTime() - new Date(b[col]).getTime();\n      }\n      if (col === \"amount\") {\n        compareResult = Number(a[col]) > Number(b[col]) ? 1 : -1;\n      } else {\n        compareResult = a[col] > b[col] ? 1 : -1;\n      }\n      return sortOrder === \"desc\" ? compareResult : compareResult * -1;\n    });\n  };\n\n  const currentTableData = tableData.slice(\n    currentPage * rowPerPage - rowPerPage,\n    currentPage * rowPerPage\n  );\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper}>\n        <Table className={classes.root}>\n          <TableHead>\n            <TableRow>{renderTableHeader()}</TableRow>\n          </TableHead>\n          <TableBody>\n            {currentTableData.map((data, index) => (\n              <TableRow tabIndex={0} className={classes.row} key={index}>\n                <TableCell component=\"th\" scope=\"data\">\n                  {data.id}\n                </TableCell>\n                <TableCell align=\"left\">{data.name}</TableCell>\n                <TableCell align=\"left\">{data.invoiceDate}</TableCell>\n                <TableCell align=\"right\">{data.comment}</TableCell>\n                <TableCell align=\"right\">{\"$ \" + data.amount}</TableCell>\n                <TableCell align=\"right\">{renderActionButtons(data)}</TableCell>\n              </TableRow>\n            ))}\n            {currentTableData.length < rowPerPage && (\n              <TableRow className={classes.placeholderRow} />\n            )}\n          </TableBody>\n        </Table>\n      </Paper>\n      <Pagination\n        totalRecords={tableData.length}\n        rowPerPage={rowPerPage}\n        onPageChanged={onPageChanged}\n        onRowPerPageChanged={onRowPerPageChanged}\n        currentPage={currentPage}\n      />\n    </React.Fragment>\n  );\n}\n\nInvoiceTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  tableData: PropTypes.array,\n  onEditClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(InvoiceTable);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport withMobileDialog from \"@material-ui/core/withMobileDialog\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport dateFns from \"date-fns\";\n\nfunction DialogForm(props) {\n  const { dialogData, closeHandler, fullScreen, isOpen, submitHandler } = props;\n\n  let formData = dialogData ? dialogData : {};\n  formData.invoiceDate = dateFns.format(\n    formData.invoiceDate ? formData.invoiceDate : new Date(),\n    \"YYYY-MM-DD\"\n  );\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    submitHandler(formData)(formData.id ? \"edit\" : \"new\");\n  };\n\n  const onFormUpdate = key => element => {\n    if (key === \"name\") {\n      element.target.value = element.target.value.replace(/\\d+/g, \"\"); // disable number input in \"name\" field\n    }\n    if (key === \"amount\") {\n      element.target.value = element.target.value.replace(/[^0-9.]/g, \"\"); // only number input in \"amount\" field\n    }\n    formData[key] = element.target.value;\n  };\n\n  const EditForm = data => (\n    <form autoComplete=\"off\" onSubmit={onFormSubmit}>\n      <Typography variant=\"h6\" gutterBottom>\n        {data.name ? \"Edit Invoice\" : \"New Invoice\"}\n      </Typography>\n      <Typography variant=\"subtitle2\" gutterBottom>\n        ID: {data.id}\n      </Typography>\n      <Grid container spacing={32}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            autoFocus\n            required\n            name=\"Name\"\n            label=\"Name\"\n            margin=\"normal\"\n            defaultValue={data.name}\n            fullWidth\n            onChange={onFormUpdate(\"name\")}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            fullWidth\n            name=\"Date\"\n            label=\"Date\"\n            type=\"date\"\n            defaultValue={data.invoiceDate}\n            margin=\"normal\"\n            onChange={onFormUpdate(\"invoiceDate\")}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={32}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            label=\"Comments\"\n            fullWidth\n            defaultValue={data.comment}\n            margin=\"normal\"\n            onChange={onFormUpdate(\"comment\")}\n            multiline={true}\n            rows={1}\n            rowsMax={4}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={32}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            type=\"text\"\n            margin=\"dense\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            helperText=\"e.g.: 500.80\"\n            onChange={onFormUpdate(\"amount\")}\n            defaultValue={data.amount}\n            inputProps={{\n              startadornment: <InputAdornment position=\"start\">$</InputAdornment>,\n              pattern: \"[1-9][0-9]*[.][0-9][0-9]\",\n            }}\n          />\n        </Grid>\n      </Grid>\n      <DialogActions>\n        <Button type=\"submit\" color=\"primary\">\n          Save\n        </Button>\n        <Button color=\"primary\" onClick={closeHandler}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </form>\n  );\n\n  return (\n    <Dialog fullWidth fullScreen={fullScreen} open={isOpen} maxWidth={\"sm\"}>\n      <DialogContent>{EditForm(formData)}</DialogContent>\n    </Dialog>\n  );\n}\n\nDialogForm.propTypes = {\n  fullScreen: PropTypes.bool.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  closeHandler: PropTypes.func.isRequired,\n  dialogData: PropTypes.object,\n  submitHandler: PropTypes.func.isRequired,\n};\n\nexport default withMobileDialog({ breakpoint: \"xs\" })(DialogForm);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport _debounce from \"lodash/debounce\";\nimport { fetchData, dateFormat } from \"helper\";\nimport HeaderBar from \"components/HeaderBar\";\nimport NotificationBar from \"components/Notification\";\nimport InvoiceTable from \"./InvoiceTable\";\nimport Dialog from \"./Dialog\";\n\nfunction HomePage() {\n  const [invoiceData, setInvoiceData] = useState(null);\n  const [updatedData, setUpdatedData] = useState(null);\n  const [isOpenDialog, setIsOpenDialog] = useState(false);\n  const [currentInvoice, setCurrentInvoice] = useState(null);\n  const [notifyInfo, setNotifyInfo] = useState(null);\n\n  useEffect(() => {\n    getInvoices();\n  }, []);\n\n  const getInvoices = () => {\n    fetchData()\n      .then(response => response.json())\n      .then(response => dateFormat(response))\n      .then(response => {\n        setInvoiceData(response);\n        setUpdatedData(response);\n      });\n  };\n\n  const onSearchUpdate = _debounce(searchInput => {\n    if (!searchInput) {\n      setUpdatedData(invoiceData);\n      return;\n    }\n    const updateData = invoiceData.filter(data => data.comment.toLowerCase().includes(searchInput));\n    setUpdatedData(updateData);\n  }, 200);\n\n  const dialogCloseHandler = () => setIsOpenDialog(false);\n\n  const editInvoiceDialog = data => {\n    setCurrentInvoice(data);\n    setIsOpenDialog(true);\n  };\n\n  const newInvoiceDialog = () => {\n    setCurrentInvoice(null);\n    setIsOpenDialog(true);\n  };\n\n  const invoiceActions = invoice => type => {\n    let fetchMethod;\n    let successMessage;\n    switch (type) {\n      case \"delete\":\n        fetchMethod = \"DELETE\";\n        successMessage = `Invoice deleted`;\n        break;\n      case \"new\":\n        fetchMethod = \"POST\";\n        successMessage = `Invoice added`;\n        break;\n      case \"edit\":\n        fetchMethod = \"PUT\";\n        successMessage = `Invoice updated`;\n        break;\n      default:\n        break;\n    }\n\n    const options = fetchMethod === \"DELETE\" ? {} : { body: JSON.stringify(invoice) };\n    fetchData(fetchMethod, invoice.id, options).then(() => {\n      getInvoices();\n      setNotifyInfo(successMessage);\n      setIsOpenDialog(false);\n    });\n  };\n\n  return (\n    <Fragment>\n      <NotificationBar notifyInfo={notifyInfo} />\n      <Dialog\n        isOpen={isOpenDialog}\n        closeHandler={dialogCloseHandler}\n        dialogData={currentInvoice}\n        submitHandler={invoiceActions}\n      />\n      <HeaderBar onButtonClick={newInvoiceDialog} onSearch={onSearchUpdate} />\n      <InvoiceTable\n        tableData={updatedData}\n        onEditClick={editInvoiceDialog}\n        onDeleteClick={invoiceActions}\n      />\n    </Fragment>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"../HomePage\";\n\nfunction app() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"\" render={() => <HomePage />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default app;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}